# PostgreSQL with PostGIS, pgvector, trgm, and TimescaleDB extensions
FROM postgis/postgis:15-3.3

# Install TimescaleDB and pgvector
RUN apt-get update && apt-get install -y \
    gnupg \
    lsb-release \
    wget \
    && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && wget --quiet -O - https://packagecloud.io/timescale/timescaledb/gpgkey | apt-key add - \
    && echo "deb https://packagecloud.io/timescale/timescaledb/debian/ $(lsb_release -cs) main" > /etc/apt/sources.list.d/timescaledb.list \
    && apt-get update \
    && apt-get install -y \
    timescaledb-2-postgresql-15 \
    postgresql-15-pgvector \
    && rm -rf /var/lib/apt/lists/*

# Enable TimescaleDB
RUN echo "shared_preload_libraries = 'timescaledb'" >> /usr/share/postgresql/postgresql.conf.sample

# Create extensions in template1 so they're available in all new databases
RUN echo "CREATE EXTENSION IF NOT EXISTS postgis;" > /docker-entrypoint-initdb.d/01-extensions.sql && \
    echo "CREATE EXTENSION IF NOT EXISTS vector;" >> /docker-entrypoint-initdb.d/01-extensions.sql && \
    echo "CREATE EXTENSION IF NOT EXISTS pg_trgm;" >> /docker-entrypoint-initdb.d/01-extensions.sql && \
    echo "CREATE EXTENSION IF NOT EXISTS timescaledb;" >> /docker-entrypoint-initdb.d/01-extensions.sql

# Set environment variables
ENV POSTGRES_DB=nexus_db
ENV POSTGRES_USER=postgres
ENV POSTGRES_PASSWORD=password

# Expose PostgreSQL port
EXPOSE 5432

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD pg_isready -U $POSTGRES_USER -d $POSTGRES_DB || exit 1
